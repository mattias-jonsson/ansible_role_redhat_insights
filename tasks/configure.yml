---

- name: Make sure Red Hat Insights services are enabled.
  become: true
  ansible.builtin.service:
    name: '{{ item }}'
    enabled: yes
  loop: '{{ ansible_role_redhat_insights_services }}'

- name: Test Red Hat Insights agent connection.
  become: true
  command: insights-client --test-connection
  changed_when: false

- name: Create a directory for Ansible custom facts.
  become: true
  file:
    state: directory
    recurse: true
    path: /etc/ansible/facts.d
    owner: root
    group: root

- name: Install the custom insights fact.
  become: true
  copy:
    src: insights.fact
    dest: /etc/ansible/facts.d
    owner: root
    group: root
    mode: '0755'

- name: Create insights-client.conf from template.
  become: true
  ansible.builtin.template:
    src: insights-client.conf.j2
    dest: /etc/insights-client/insights-client.conf
    owner: root
    group: root
    mode: '0644'
  notify: reregister of Red Hat Insights

- name: Test Red Hat Insights agent status.
  become: true
  command: insights-client --status
  register: insights_status
  changed_when: false
  failed_when:
    - insights_status.rc != 0
    - insights_status.rc != 1

- name: Check if /etc/insights-client/.unregistered exists
  become: true
  ansible.builtin.stat:
    path: /etc/insights-client/.unregistered
  register: unregsitered_check
  failed_when:
    - unregsitered_check.stat.exists 
    - insights_status.rc != 1

- name: Register on Red Hat insights.
  become: true
  command: insights-client --register
  when: unregsitered_check.stat.exists

- name: Upload data to Red Hat insights.
  become: true
  command: insights-client
  when: unregsitered_check.stat.exists

- name: Create malware-detection-config.yml from template
  become: true
  ansible.builtin.template:
    src: malware-detection-config.yml.j2
    dest: /etc/insights-client/malware-detection-config.yml
    owner: root
    group: root
    mode: '0644'
  notify: testscan and upload to Red Hat Insights
  when: ansible_role_redhat_insights_enable_malware_scan
